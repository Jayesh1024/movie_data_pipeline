1. while scraping the pages, imdb keep changing their tag attributes by some random codes
Sol: I used the tag:nth-child(n) strategy to tackle this

2. In which order should my code run, what will be the dependencies?
Sol: Do simulations, for now this is not a much thought of solution but I will think about it

3. Identifying new records using the source dimension ids when doing incremental load

4. When parsing, dynamic number of child elements in some divs
Sol: Regex

5. Adjust my code by checking the data quality of the spark dataframes and logs if there is some extraction error from the movie sites

6. Adding data quality checks, and defining quality metrics which will be logged for a data quality dashboard

7. Implementing SCD-1 and SCD-2 for the dimensions

8. Optimising scraping speed:
    8.1 Don't scrape the whole page, pick elements to scrape # Can't use this approach, XPath changes if the target element is preceded with some javascript element

9. If extract.py fails then saving the scraped results before the script exits
    9.1 Two ways:
        9.1.a Use MongoDB for saving the data in an append manner
        9.1.b Use a try except block to wrap around the code, so when script fails the data gets saved before the code quits #Using this way for now

10. Deciding the recovery point and how the script should behave when rerunning after a extract.py failure
    10.1 By script behaviour I mean it should check what data got loaded before failure and by considering that resume the progress

11. Database table surrogate key sequence not decreamenting after deleting rows




